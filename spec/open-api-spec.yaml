openapi: 3.0.3
info:
  title: Product Management API
  description: A complex API for managing products with detailed error handling and headers.
  version: 2.0.0
  contact:
    name: API Support
    url: https://www.example.com/support
    email: support@example.com

servers:
  - url: https://api.example.com/v2
    description: Production server
  - url: https://staging.api.example.com/v2
    description: Staging server

tags:
  - name: Products
    description: Operations related to managing products

paths:
  /products:
    get:
      tags:
        - Products
      summary: Get all products
      description: Retrieve a paginated list of products. Supports filtering and sorting.
      parameters:
        - name: page
          in: query
          description: Page number for pagination
          required: false
          schema:
            type: integer
            default: 1
        - name: pageSize
          in: query
          description: Number of products per page
          required: false
          schema:
            type: integer
            default: 10
        - name: sort
          in: query
          description: Sorting criteria in the format `field:direction` (e.g., `name:asc`)
          required: false
          schema:
            type: string
        - name: filter
          in: query
          description: Filter criteria in JSON format
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A paginated list of products
          headers:
            X-Total-Count:
              description: Total number of products available
              schema:
                type: integer
            X-Request-ID:
              description: Unique identifier for the request
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductListResponse'
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    post:
      tags:
        - Products
      summary: Create a new product
      description: Add a new product to the system. Requires authentication.
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCreate'
      responses:
        '201':
          description: Product created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Invalid request payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /products/{productId}:
    get:
      tags:
        - Products
      summary: Get product by ID
      description: Retrieve details of a specific product by its unique ID.
      parameters:
        - name: productId
          in: path
          description: ID of the product to retrieve
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Product details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    put:
      tags:
        - Products
      summary: Update product by ID
      description: Update the details of a specific product by its unique ID.
      parameters:
        - name: productId
          in: path
          description: ID of the product to update
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductUpdate'
      responses:
        '200':
          description: Product updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Invalid request payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      tags:
        - Products
      summary: Delete product by ID
      description: Remove a specific product from the system by its unique ID.
      parameters:
        - name: productId
          in: path
          description: ID of the product to delete
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Product deleted successfully
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Product:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the product
        name:
          type: string
          description: Name of the product
        description:
          type: string
          description: Detailed description of the product
        price:
          type: number
          format: float
          description: Price of the product
        stock:
          type: integer
          description: Number of items in stock
        createdAt:
          type: string
          format: date-time
          description: Timestamp when the product was created
        updatedAt:
          type: string
          format: date-time
          description: Timestamp when the product was last updated

    ProductCreate:
      type: object
      properties:
        name:
          type: string
          description: Name of the product
        description:
          type: string
          description: Detailed description of the product
        price:
          type: number
          format: float
          description: Price of the product
        stock:
          type: integer
          description: Number of items in stock
      required:
        - name
        - price
        - stock

    ProductUpdate:
      type: object
      properties:
        name:
          type: string
          description: Name of the product
        description:
          type: string
          description: Detailed description of the product
        price:
          type: number
          format: float
          description: Price of the product
        stock:
          type: integer
          description: Number of items in stock

    ProductListResponse:
      type: object
      properties:
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product'
        total:
          type: integer
          description: Total number of products available

    ErrorResponse:
      type: object
      properties:
        code:
          type: string
          description: Error code
        message:
          type: string
          description: Error message
        details:
          type: array
          items:
            type: string
          description: Additional information about the error