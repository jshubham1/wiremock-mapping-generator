services:
  # Web UI for WireMock mapping generation
  wiremock-web-ui:
    image: python:3.11-slim
    container_name: wiremock-web-ui
    ports:
      - "5001:5001"
    volumes:
      - ./src:/app/src:ro
      - ./examples:/app/examples:ro
      - ./output:/app/output
      - ./requirements.txt:/app/requirements.txt:ro
      - ./wiremock-web:/app/wiremock-web:ro
    working_dir: /app
    command: >
      sh -c "
        pip install -r requirements.txt &&
        python wiremock-web
      "
    environment:
      - FLASK_ENV=production
      - PYTHONPATH=/app
    depends_on:
      - wiremock
    networks:
      - wiremock-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Generator service to create mappings from OpenAPI specs
  wiremock-generator:
    image: python:3.11-slim
    container_name: wiremock-generator
    volumes:
      - ./examples:/examples:ro
      - ./output:/output
      - ./src:/src:ro
      - ./requirements.txt:/requirements.txt:ro
    working_dir: /
    command: >
      sh -c "
        echo 'Installing dependencies...' &&
        pip install --trusted-host pypi.org --trusted-host pypi.python.org --trusted-host files.pythonhosted.org -r requirements.txt &&
        echo 'Generating Multi-Spec WireMock stubs from OpenAPI specifications...' &&
        python3 -m src.core.multi_spec_wiremock_generator --spec-dir /examples --output-dir /output &&
        echo 'Multi-spec generation completed successfully!'
      "
    networks:
      - wiremock-network

  # WireMock server
  wiremock:
    image: wiremock/wiremock:3.3.1
    container_name: wiremock-server
    ports:
      - "${WIREMOCK_PORT:-8080}:8080"
    volumes:
      - ./output/mappings:/home/wiremock/mappings
      - ./output/__files:/home/wiremock/__files
    environment:
      - WIREMOCK_OPTIONS=${WIREMOCK_OPTIONS:---global-response-templating --verbose}
    command: >
      --port 8080
      --root-dir /home/wiremock
      --global-response-templating
      --verbose
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/__admin/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    networks:
      - wiremock-network

networks:
  wiremock-network:
    driver: bridge
