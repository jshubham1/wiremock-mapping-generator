services:
  # Generator service to create mappings from OpenAPI specs
  wiremock-generator:
    image: python:3.11-slim
    container_name: wiremock-generator
    volumes:
      - ./spec:/spec:ro
      - ./wiremock:/output
      - ./scripts:/scripts:ro
    working_dir: /scripts
    command: >
      sh -c "
        echo 'Installing PyYAML for YAML support...' &&
        pip install --trusted-host pypi.org --trusted-host pypi.python.org --trusted-host files.pythonhosted.org pyyaml &&
        echo 'Generating Multi-Spec WireMock stubs from OpenAPI specifications...' &&
        python3 /scripts/multi_spec_wiremock_generator.py /spec /output &&
        echo 'Multi-spec generation completed successfully!'
      "
    networks:
      - wiremock-network

  # WireMock server
  wiremock:
    image: wiremock/wiremock:3.3.1
    container_name: wiremock-server
    ports:
      - "${WIREMOCK_PORT:-8080}:8080"
    volumes:
      - ./wiremock/mappings:/home/wiremock/mappings
      - ./wiremock/__files:/home/wiremock/__files
    environment:
      - WIREMOCK_OPTIONS=${WIREMOCK_OPTIONS:---global-response-templating --verbose}
    command: >
      --port 8080
      --root-dir /home/wiremock
      --global-response-templating
      --verbose
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/__admin/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    # depends_on:
    #   wiremock-generator:
    #     condition: service_completed_successfully
    networks:
      - wiremock-network

networks:
  wiremock-network:
    driver: bridge
